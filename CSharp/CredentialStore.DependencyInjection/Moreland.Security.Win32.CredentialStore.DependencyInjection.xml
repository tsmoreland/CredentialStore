<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Moreland.Security.Win32.CredentialStore.DependencyInjection</name>
    </assembly>
    <members>
        <member name="T:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions">
            <summary>
            CredentialStoreOptions supported by <see cref="T:Moreland.Security.Win32.CredentialStore.ICredentialManager"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.#ctor(Moreland.Security.Win32.CredentialStore.LoggerType,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Instantiates a new instance of the <see cref="T:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions"/> class.
            </summary>
            <param name="loggerType">Logger Type to be used within injected service</param>
            <param name="serviceLifetime">service life time to be used for injected services</param>
        </member>
        <member name="P:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.LoggerType">
            <summary>
            specifies the <see cref="P:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.LoggerType"/> to be used
            </summary>
        </member>
        <member name="P:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.ServiceLifetime">
            <summary>
            Specified the <see cref="P:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.ServiceLifetime"/> to be used.
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.Deconstruct(Moreland.Security.Win32.CredentialStore.LoggerType@,Microsoft.Extensions.DependencyInjection.ServiceLifetime@)">
            <summary>
            Deconstructs object into individual properties
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.op_Equality(Moreland.Security.Win32.CredentialStore.CredentialStoreOptions,Moreland.Security.Win32.CredentialStore.CredentialStoreOptions)">
            <summary>
            Returns <c>true</c> if <paramref name="first"/> is equal to <paramref name="second"/>;
            otherwise <c>false</c>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.op_Inequality(Moreland.Security.Win32.CredentialStore.CredentialStoreOptions,Moreland.Security.Win32.CredentialStore.CredentialStoreOptions)">
            <summary>
            Returns <c>true</c> if <paramref name="first"/> is not equal to <paramref name="second"/>;
            otherwise <c>false</c>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.Equals(Moreland.Security.Win32.CredentialStore.CredentialStoreOptions)">
            <summary>
            <inheritdoc cref="M:System.IEquatable`1.Equals(`0)"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.Equals(System.Object)">
            <summary>
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.CredentialStoreOptions.GetHashCode">
            <summary>
            <inheritdoc cref="M:System.Object.GetHashCode"/>
            </summary>
        </member>
        <member name="T:Moreland.Security.Win32.CredentialStore.LoggerType">
            <summary>
            Supported Logger Types used by CredentialStore
            </summary>
        </member>
        <member name="F:Moreland.Security.Win32.CredentialStore.LoggerType.None">
            <summary>
            No logger will be used
            </summary>
        </member>
        <member name="F:Moreland.Security.Win32.CredentialStore.LoggerType.MsExtensionsLogger">
            <summary>
            use <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to perform logging
            </summary>
        </member>
        <member name="F:Moreland.Security.Win32.CredentialStore.LoggerType.TraceSwitchLogger">
            <summary>
            Use <see cref="T:System.Diagnostics.Trace"/> logging with TraceSwitch defined in CredentialStore library
            </summary>
        </member>
        <member name="F:Moreland.Security.Win32.CredentialStore.LoggerType.CustomLogger">
            <summary>
            Use logger configured by the user
            </summary>
        </member>
        <member name="T:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter">
            <summary>
            <inheritdoc cref="T:Moreland.Security.Win32.CredentialStore.ILoggerAdapter"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter.#ctor(Microsoft.Extensions.Logging.ILogger{Moreland.Security.Win32.CredentialStore.ICredentialManager})">
            <summary>
            Instantiates a new instance of the <see cref="T:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter"/> class.
            </summary>
            <param name="logger"><see cref="T:Microsoft.Extensions.Logging.ILogger"/> wrapped by this class, it is used to perform the actual logging</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter.Error(System.String,System.Exception,System.String)">
            <summary>
            <inheritdoc cref="M:Moreland.Security.Win32.CredentialStore.ILoggerAdapter.Error(System.String,System.Exception,System.String)"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter.Info(System.String,System.String)">
            <summary>
            <inheritdoc cref="M:Moreland.Security.Win32.CredentialStore.ILoggerAdapter.Info(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter.Verbose(System.String,System.String)">
            <summary>
            <inheritdoc cref="M:Moreland.Security.Win32.CredentialStore.ILoggerAdapter.Verbose(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:Moreland.Security.Win32.CredentialStore.MsExtensionsLoggerAdapter.Warning(System.String,System.String)">
            <summary>
            <inheritdoc cref="M:Moreland.Security.Win32.CredentialStore.ILoggerAdapter.Warning(System.String,System.String)"/>
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.CredentialStoreServiceCollectionExtensionMethods">
            <summary>
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> extension methods to simplify addition of CredentialStore service
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CredentialStoreServiceCollectionExtensionMethods.AddCredentialStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,Moreland.Security.Win32.CredentialStore.CredentialStoreOptions)">
            <summary>
            Adds <see cref="T:Moreland.Security.Win32.CredentialStore.ICredentialManager"/> to <paramref name="serviceCollection"/> along with any required
            services it needs
            </summary>
            <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add services to.</param>
            <param name="options">options used to determine lifetime, and which logger is used</param>
            <example>
            <code>
             public void ConfigureServices(IServiceCollection services)
             {
                 services.AddCredentialStore(ServiceLifetime.Singleton);
             }
            </code>
            </example>
        </member>
    </members>
</doc>
